{"ast":null,"code":"var _jsxFileName = \"/Users/simonpainter/Documents/GitHub/madsimonj.github.io/src/Components/Podcasts/index.tsx\";\nimport podcastData from './podcasts.json';\nimport Podcast from './Podcast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Podcasts = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"As of \", new Date().getFullYear(), \", I've been lucky enough to end up on a episodes of some of the absolutely brilliant .NET and tech podcasts that are out there on your favourite podcast client. Thanks to everyone involved for these!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nes-container with-title is-centered\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"Podcast List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), podcastData.Podcasts.map(x => {\n        return /*#__PURE__*/_jsxDEV(Podcast, {\n          Podcast: x\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Podcasts;\nexport default Podcasts;\nvar _c;\n$RefreshReg$(_c, \"Podcasts\");","map":{"version":3,"names":["podcastData","Podcast","jsxDEV","_jsxDEV","Fragment","_Fragment","Podcasts","children","Date","getFullYear","fileName","_jsxFileName","lineNumber","columnNumber","className","map","x","_c","$RefreshReg$"],"sources":["/Users/simonpainter/Documents/GitHub/madsimonj.github.io/src/Components/Podcasts/index.tsx"],"sourcesContent":["import react from 'react';\nimport podcastData from './podcasts.json';\nimport Podcast from './Podcast';\n\nconst Podcasts = () => {\n    return (\n        <>\n            <p>As of {new Date().getFullYear()}, I've been lucky enough to end up on a episodes of some of the absolutely brilliant .NET and tech podcasts that are out there on your favourite podcast client. Thanks to everyone involved for these!</p>\n            <div className=\"nes-container with-title is-centered\">\n                <h3 className='title'>Podcast List</h3>\n                {\n                    podcastData.Podcasts.map(x => {\n                        return (\n                            <Podcast Podcast={x} />\n                        );\n                    } )\n                }\n            </div>\n        </>\n    );\n};\n\nexport default Podcasts;"],"mappings":";AACA,OAAOA,WAAW,MAAM,iBAAiB;AACzC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACIJ,OAAA;MAAAI,QAAA,GAAG,QAAM,EAAC,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,EAAC,yMAAuM;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9OV,OAAA;MAAKW,SAAS,EAAC,sCAAsC;MAAAP,QAAA,gBACjDJ,OAAA;QAAIW,SAAS,EAAC,OAAO;QAAAP,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEnCb,WAAW,CAACM,QAAQ,CAACS,GAAG,CAACC,CAAC,IAAI;QAC1B,oBACIb,OAAA,CAACF,OAAO;UAACA,OAAO,EAAEe;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAE/B,CAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CAAC;EAAA,eACR,CAAC;AAEX,CAAC;AAACI,EAAA,GAhBIX,QAAQ;AAkBd,eAAeA,QAAQ;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}