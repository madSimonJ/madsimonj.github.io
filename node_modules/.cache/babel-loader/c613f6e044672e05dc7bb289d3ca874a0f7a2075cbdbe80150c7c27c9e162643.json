{"ast":null,"code":"var _jsxFileName = \"/Users/simonpainter/Documents/GitHub/madsimonj.github.io/src/Components/Podcasts/Podcast.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Podcast = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: props.Podcast.Link,\n          children: [props.Podcast.PodcastTitle, \" #\", props.Podcast.Episode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), \"- \", props.Podcast.EpisodeTitle, \" - \", /*#__PURE__*/_jsxDEV(\"small\", {\n        children: new Date(props.Podcast.Date).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n};\n_c = Podcast;\nexport default Podcast;\nvar _c;\n$RefreshReg$(_c, \"Podcast\");","map":{"version":3,"names":["Podcast","props","_jsxDEV","_Fragment","children","href","Link","PodcastTitle","Episode","fileName","_jsxFileName","lineNumber","columnNumber","EpisodeTitle","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/simonpainter/Documents/GitHub/madsimonj.github.io/src/Components/Podcasts/Podcast.tsx"],"sourcesContent":["import react from 'react';\n\n\n\ntype podcastProps = {\n    Podcast: PodcastDetails\n}\n\nconst Podcast = (props: podcastProps) => {\n    return (\n        <>\n           <p>\n                <strong>\n                    <a href={props.Podcast.Link}>\n                        {props.Podcast.PodcastTitle} #{props.Podcast.Episode}\n                    </a>\n                </strong>\n                 - {props.Podcast.EpisodeTitle} - <small>{new Date(props.Podcast.Date).toLocaleDateString()}</small>\n           </p>\n        </>\n    );\n};\n\nexport default Podcast;"],"mappings":";;;AAQA,MAAMA,OAAO,GAAIC,KAAmB,IAAK;EACrC,oBACIC,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACGF,OAAA;MAAAE,QAAA,gBACKF,OAAA;QAAAE,QAAA,eACIF,OAAA;UAAGG,IAAI,EAAEJ,KAAK,CAACD,OAAO,CAACM,IAAK;UAAAF,QAAA,GACvBH,KAAK,CAACD,OAAO,CAACO,YAAY,EAAC,IAAE,EAACN,KAAK,CAACD,OAAO,CAACQ,OAAO;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,MACN,EAACX,KAAK,CAACD,OAAO,CAACa,YAAY,EAAC,KAAG,eAAAX,OAAA;QAAAE,QAAA,EAAQ,IAAIU,IAAI,CAACb,KAAK,CAACD,OAAO,CAACc,IAAI,CAAC,CAACC,kBAAkB,CAAC;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG;EAAC,gBACL,CAAC;AAEX,CAAC;AAACI,EAAA,GAbIhB,OAAO;AAeb,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}